// Protocol for nodeservice.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: node_service.proto

package nodeservoceproto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ReserveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId      string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	OwnerAccountId string `protobuf:"bytes,2,opt,name=owner_account_id,json=ownerAccountId,proto3" json:"owner_account_id,omitempty"`
}

func (x *ReserveRequest) Reset() {
	*x = ReserveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveRequest) ProtoMessage() {}

func (x *ReserveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveRequest.ProtoReflect.Descriptor instead.
func (*ReserveRequest) Descriptor() ([]byte, []int) {
	return file_node_service_proto_rawDescGZIP(), []int{0}
}

func (x *ReserveRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ReserveRequest) GetOwnerAccountId() string {
	if x != nil {
		return x.OwnerAccountId
	}
	return ""
}

type ReserveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReserveReply) Reset() {
	*x = ReserveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveReply) ProtoMessage() {}

func (x *ReserveReply) ProtoReflect() protoreflect.Message {
	mi := &file_node_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveReply.ProtoReflect.Descriptor instead.
func (*ReserveReply) Descriptor() ([]byte, []int) {
	return file_node_service_proto_rawDescGZIP(), []int{1}
}

type FunctionMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FunctionName  string `protobuf:"bytes,1,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	Handler       string `protobuf:"bytes,2,opt,name=handler,proto3" json:"handler,omitempty"`
	TimeoutInMs   int64  `protobuf:"varint,3,opt,name=timeout_in_ms,json=timeoutInMs,proto3" json:"timeout_in_ms,omitempty"`
	MemoryInBytes int64  `protobuf:"varint,4,opt,name=memory_in_bytes,json=memoryInBytes,proto3" json:"memory_in_bytes,omitempty"`
}

func (x *FunctionMeta) Reset() {
	*x = FunctionMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionMeta) ProtoMessage() {}

func (x *FunctionMeta) ProtoReflect() protoreflect.Message {
	mi := &file_node_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionMeta.ProtoReflect.Descriptor instead.
func (*FunctionMeta) Descriptor() ([]byte, []int) {
	return file_node_service_proto_rawDescGZIP(), []int{2}
}

func (x *FunctionMeta) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *FunctionMeta) GetHandler() string {
	if x != nil {
		return x.Handler
	}
	return ""
}

func (x *FunctionMeta) GetTimeoutInMs() int64 {
	if x != nil {
		return x.TimeoutInMs
	}
	return 0
}

func (x *FunctionMeta) GetMemoryInBytes() int64 {
	if x != nil {
		return x.MemoryInBytes
	}
	return 0
}

type CreateContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId    string        `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Name         string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // container name
	FunctionMeta *FunctionMeta `protobuf:"bytes,3,opt,name=function_meta,json=functionMeta,proto3" json:"function_meta,omitempty"`
}

func (x *CreateContainerRequest) Reset() {
	*x = CreateContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerRequest) ProtoMessage() {}

func (x *CreateContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerRequest.ProtoReflect.Descriptor instead.
func (*CreateContainerRequest) Descriptor() ([]byte, []int) {
	return file_node_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateContainerRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CreateContainerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateContainerRequest) GetFunctionMeta() *FunctionMeta {
	if x != nil {
		return x.FunctionMeta
	}
	return nil
}

type CreateContainerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
}

func (x *CreateContainerReply) Reset() {
	*x = CreateContainerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContainerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContainerReply) ProtoMessage() {}

func (x *CreateContainerReply) ProtoReflect() protoreflect.Message {
	mi := &file_node_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContainerReply.ProtoReflect.Descriptor instead.
func (*CreateContainerReply) Descriptor() ([]byte, []int) {
	return file_node_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateContainerReply) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type RemoveContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId   string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ContainerId string `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
}

func (x *RemoveContainerRequest) Reset() {
	*x = RemoveContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveContainerRequest) ProtoMessage() {}

func (x *RemoveContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveContainerRequest.ProtoReflect.Descriptor instead.
func (*RemoveContainerRequest) Descriptor() ([]byte, []int) {
	return file_node_service_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveContainerRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RemoveContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type RemoveContainerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveContainerReply) Reset() {
	*x = RemoveContainerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveContainerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveContainerReply) ProtoMessage() {}

func (x *RemoveContainerReply) ProtoReflect() protoreflect.Message {
	mi := &file_node_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveContainerReply.ProtoReflect.Descriptor instead.
func (*RemoveContainerReply) Descriptor() ([]byte, []int) {
	return file_node_service_proto_rawDescGZIP(), []int{6}
}

type InvokeFunctionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId    string        `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ContainerId  string        `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Event        []byte        `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	FunctionMeta *FunctionMeta `protobuf:"bytes,4,opt,name=function_meta,json=functionMeta,proto3" json:"function_meta,omitempty"`
}

func (x *InvokeFunctionRequest) Reset() {
	*x = InvokeFunctionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeFunctionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeFunctionRequest) ProtoMessage() {}

func (x *InvokeFunctionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeFunctionRequest.ProtoReflect.Descriptor instead.
func (*InvokeFunctionRequest) Descriptor() ([]byte, []int) {
	return file_node_service_proto_rawDescGZIP(), []int{7}
}

func (x *InvokeFunctionRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *InvokeFunctionRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *InvokeFunctionRequest) GetEvent() []byte {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *InvokeFunctionRequest) GetFunctionMeta() *FunctionMeta {
	if x != nil {
		return x.FunctionMeta
	}
	return nil
}

type InvokeFunctionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body   []byte                      `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Header *InvokeFunctionReply_Header `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Footer *InvokeFunctionReply_Footer `protobuf:"bytes,3,opt,name=footer,proto3" json:"footer,omitempty"`
}

func (x *InvokeFunctionReply) Reset() {
	*x = InvokeFunctionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeFunctionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeFunctionReply) ProtoMessage() {}

func (x *InvokeFunctionReply) ProtoReflect() protoreflect.Message {
	mi := &file_node_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeFunctionReply.ProtoReflect.Descriptor instead.
func (*InvokeFunctionReply) Descriptor() ([]byte, []int) {
	return file_node_service_proto_rawDescGZIP(), []int{8}
}

func (x *InvokeFunctionReply) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *InvokeFunctionReply) GetHeader() *InvokeFunctionReply_Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *InvokeFunctionReply) GetFooter() *InvokeFunctionReply_Footer {
	if x != nil {
		return x.Footer
	}
	return nil
}

type NodeStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalMemoryInBytes     int64   `protobuf:"varint,1,opt,name=total_memory_in_bytes,json=totalMemoryInBytes,proto3" json:"total_memory_in_bytes,omitempty"`
	MemoryUsageInBytes     int64   `protobuf:"varint,2,opt,name=memory_usage_in_bytes,json=memoryUsageInBytes,proto3" json:"memory_usage_in_bytes,omitempty"`
	AvailableMemoryInBytes int64   `protobuf:"varint,3,opt,name=available_memory_in_bytes,json=availableMemoryInBytes,proto3" json:"available_memory_in_bytes,omitempty"`
	CpuUsagePct            float64 `protobuf:"fixed64,4,opt,name=cpu_usage_pct,json=cpuUsagePct,proto3" json:"cpu_usage_pct,omitempty"`
	DiskTotalInBytes       int64   `protobuf:"varint,5,opt,name=disk_total_in_bytes,json=diskTotalInBytes,proto3" json:"disk_total_in_bytes,omitempty"`
	DiskAvailInBytes       int64   `protobuf:"varint,6,opt,name=disk_avail_in_bytes,json=diskAvailInBytes,proto3" json:"disk_avail_in_bytes,omitempty"`
	DiskTotalInodes        int64   `protobuf:"varint,7,opt,name=disk_total_inodes,json=diskTotalInodes,proto3" json:"disk_total_inodes,omitempty"`
	DiskFreeInodes         int64   `protobuf:"varint,8,opt,name=disk_free_inodes,json=diskFreeInodes,proto3" json:"disk_free_inodes,omitempty"`
}

func (x *NodeStats) Reset() {
	*x = NodeStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStats) ProtoMessage() {}

func (x *NodeStats) ProtoReflect() protoreflect.Message {
	mi := &file_node_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStats.ProtoReflect.Descriptor instead.
func (*NodeStats) Descriptor() ([]byte, []int) {
	return file_node_service_proto_rawDescGZIP(), []int{9}
}

func (x *NodeStats) GetTotalMemoryInBytes() int64 {
	if x != nil {
		return x.TotalMemoryInBytes
	}
	return 0
}

func (x *NodeStats) GetMemoryUsageInBytes() int64 {
	if x != nil {
		return x.MemoryUsageInBytes
	}
	return 0
}

func (x *NodeStats) GetAvailableMemoryInBytes() int64 {
	if x != nil {
		return x.AvailableMemoryInBytes
	}
	return 0
}

func (x *NodeStats) GetCpuUsagePct() float64 {
	if x != nil {
		return x.CpuUsagePct
	}
	return 0
}

func (x *NodeStats) GetDiskTotalInBytes() int64 {
	if x != nil {
		return x.DiskTotalInBytes
	}
	return 0
}

func (x *NodeStats) GetDiskAvailInBytes() int64 {
	if x != nil {
		return x.DiskAvailInBytes
	}
	return 0
}

func (x *NodeStats) GetDiskTotalInodes() int64 {
	if x != nil {
		return x.DiskTotalInodes
	}
	return 0
}

func (x *NodeStats) GetDiskFreeInodes() int64 {
	if x != nil {
		return x.DiskFreeInodes
	}
	return 0
}

type ContainerStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId        string  `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	TotalMemoryInBytes int64   `protobuf:"varint,2,opt,name=total_memory_in_bytes,json=totalMemoryInBytes,proto3" json:"total_memory_in_bytes,omitempty"`
	MemoryUsageInBytes int64   `protobuf:"varint,3,opt,name=memory_usage_in_bytes,json=memoryUsageInBytes,proto3" json:"memory_usage_in_bytes,omitempty"`
	CpuUsagePct        float64 `protobuf:"fixed64,4,opt,name=cpu_usage_pct,json=cpuUsagePct,proto3" json:"cpu_usage_pct,omitempty"`
}

func (x *ContainerStats) Reset() {
	*x = ContainerStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStats) ProtoMessage() {}

func (x *ContainerStats) ProtoReflect() protoreflect.Message {
	mi := &file_node_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStats.ProtoReflect.Descriptor instead.
func (*ContainerStats) Descriptor() ([]byte, []int) {
	return file_node_service_proto_rawDescGZIP(), []int{10}
}

func (x *ContainerStats) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ContainerStats) GetTotalMemoryInBytes() int64 {
	if x != nil {
		return x.TotalMemoryInBytes
	}
	return 0
}

func (x *ContainerStats) GetMemoryUsageInBytes() int64 {
	if x != nil {
		return x.MemoryUsageInBytes
	}
	return 0
}

func (x *ContainerStats) GetCpuUsagePct() float64 {
	if x != nil {
		return x.CpuUsagePct
	}
	return 0
}

type GetStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *GetStatsRequest) Reset() {
	*x = GetStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsRequest) ProtoMessage() {}

func (x *GetStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsRequest.ProtoReflect.Descriptor instead.
func (*GetStatsRequest) Descriptor() ([]byte, []int) {
	return file_node_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetStatsRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type GetStatsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeStats          *NodeStats        `protobuf:"bytes,1,opt,name=node_stats,json=nodeStats,proto3" json:"node_stats,omitempty"`
	ContainerStatsList []*ContainerStats `protobuf:"bytes,2,rep,name=container_stats_list,json=containerStatsList,proto3" json:"container_stats_list,omitempty"`
	LiveId             string            `protobuf:"bytes,3,opt,name=live_id,json=liveId,proto3" json:"live_id,omitempty"`
	OwnerAccountId     string            `protobuf:"bytes,4,opt,name=owner_account_id,json=ownerAccountId,proto3" json:"owner_account_id,omitempty"`
}

func (x *GetStatsReply) Reset() {
	*x = GetStatsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsReply) ProtoMessage() {}

func (x *GetStatsReply) ProtoReflect() protoreflect.Message {
	mi := &file_node_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsReply.ProtoReflect.Descriptor instead.
func (*GetStatsReply) Descriptor() ([]byte, []int) {
	return file_node_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetStatsReply) GetNodeStats() *NodeStats {
	if x != nil {
		return x.NodeStats
	}
	return nil
}

func (x *GetStatsReply) GetContainerStatsList() []*ContainerStats {
	if x != nil {
		return x.ContainerStatsList
	}
	return nil
}

func (x *GetStatsReply) GetLiveId() string {
	if x != nil {
		return x.LiveId
	}
	return ""
}

func (x *GetStatsReply) GetOwnerAccountId() string {
	if x != nil {
		return x.OwnerAccountId
	}
	return ""
}

type InvokeFunctionReply_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error              []byte                                       `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Handled            bool                                         `protobuf:"varint,2,opt,name=handled,proto3" json:"handled,omitempty"`
	StatusCode         string                                       `protobuf:"bytes,3,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Headers            map[string]*InvokeFunctionReply_Header_Value `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MaxMemUsageInBytes int64                                        `protobuf:"varint,5,opt,name=max_mem_usage_in_bytes,json=maxMemUsageInBytes,proto3" json:"max_mem_usage_in_bytes,omitempty"`
	FunctionLog        string                                       `protobuf:"bytes,6,opt,name=function_log,json=functionLog,proto3" json:"function_log,omitempty"`
}

func (x *InvokeFunctionReply_Header) Reset() {
	*x = InvokeFunctionReply_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeFunctionReply_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeFunctionReply_Header) ProtoMessage() {}

func (x *InvokeFunctionReply_Header) ProtoReflect() protoreflect.Message {
	mi := &file_node_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeFunctionReply_Header.ProtoReflect.Descriptor instead.
func (*InvokeFunctionReply_Header) Descriptor() ([]byte, []int) {
	return file_node_service_proto_rawDescGZIP(), []int{8, 0}
}

func (x *InvokeFunctionReply_Header) GetError() []byte {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *InvokeFunctionReply_Header) GetHandled() bool {
	if x != nil {
		return x.Handled
	}
	return false
}

func (x *InvokeFunctionReply_Header) GetStatusCode() string {
	if x != nil {
		return x.StatusCode
	}
	return ""
}

func (x *InvokeFunctionReply_Header) GetHeaders() map[string]*InvokeFunctionReply_Header_Value {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *InvokeFunctionReply_Header) GetMaxMemUsageInBytes() int64 {
	if x != nil {
		return x.MaxMemUsageInBytes
	}
	return 0
}

func (x *InvokeFunctionReply_Header) GetFunctionLog() string {
	if x != nil {
		return x.FunctionLog
	}
	return ""
}

type InvokeFunctionReply_Footer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DurationInNanos int64  `protobuf:"varint,1,opt,name=duration_in_nanos,json=durationInNanos,proto3" json:"duration_in_nanos,omitempty"`
	InvokeException string `protobuf:"bytes,2,opt,name=invoke_exception,json=invokeException,proto3" json:"invoke_exception,omitempty"`
	Error           string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *InvokeFunctionReply_Footer) Reset() {
	*x = InvokeFunctionReply_Footer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeFunctionReply_Footer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeFunctionReply_Footer) ProtoMessage() {}

func (x *InvokeFunctionReply_Footer) ProtoReflect() protoreflect.Message {
	mi := &file_node_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeFunctionReply_Footer.ProtoReflect.Descriptor instead.
func (*InvokeFunctionReply_Footer) Descriptor() ([]byte, []int) {
	return file_node_service_proto_rawDescGZIP(), []int{8, 1}
}

func (x *InvokeFunctionReply_Footer) GetDurationInNanos() int64 {
	if x != nil {
		return x.DurationInNanos
	}
	return 0
}

func (x *InvokeFunctionReply_Footer) GetInvokeException() string {
	if x != nil {
		return x.InvokeException
	}
	return ""
}

func (x *InvokeFunctionReply_Footer) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type InvokeFunctionReply_Header_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []string `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *InvokeFunctionReply_Header_Value) Reset() {
	*x = InvokeFunctionReply_Header_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeFunctionReply_Header_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeFunctionReply_Header_Value) ProtoMessage() {}

func (x *InvokeFunctionReply_Header_Value) ProtoReflect() protoreflect.Message {
	mi := &file_node_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeFunctionReply_Header_Value.ProtoReflect.Descriptor instead.
func (*InvokeFunctionReply_Header_Value) Descriptor() ([]byte, []int) {
	return file_node_service_proto_rawDescGZIP(), []int{8, 0, 0}
}

func (x *InvokeFunctionReply_Header_Value) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_node_service_proto protoreflect.FileDescriptor

var file_node_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x63,
	0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x59, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x99, 0x01, 0x0a, 0x0c, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x5f,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x49, 0x6e, 0x4d, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f,
	0x69, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x90, 0x01,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x63, 0x65,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x22, 0x39, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x16, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0xb4, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x43, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x6f, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x22, 0xc3, 0x05, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x6f, 0x6b,
	0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x12, 0x44, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x63, 0x65,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x06, 0x66, 0x6f, 0x6f, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x6f, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x6b, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x1a, 0x94,
	0x03, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x53, 0x0a, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x32, 0x0a, 0x16, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x12, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x6d, 0x55, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6c, 0x6f, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x1a, 0x1d, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x6e, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x48, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x6f, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x75, 0x0a, 0x06, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x12,
	0x2a, 0x0a, 0x11, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x6e,
	0x61, 0x6e, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x69,
	0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x45, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x84, 0x03, 0x0a,
	0x09, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x15, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x31, 0x0a,
	0x15, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x39, 0x0a, 0x19, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x16, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x63,
	0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x63, 0x74, 0x12,
	0x2d, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x6e,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x64, 0x69,
	0x73, 0x6b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2d,
	0x0a, 0x13, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x6e, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x64, 0x69, 0x73,
	0x6b, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a,
	0x11, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x6b, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x69, 0x73,
	0x6b, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x6b, 0x46, 0x72, 0x65, 0x65, 0x49, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0xbd, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x15,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x0d, 0x63, 0x70, 0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x63, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x50, 0x63, 0x74, 0x22, 0x30, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x52, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x63, 0x65, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x76, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x76, 0x65, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x32, 0xe2, 0x03, 0x0a, 0x0b, 0x4e,
	0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x20, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x6f, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x6f, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x6f, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x65, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x63,
	0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x6f, 0x6b,
	0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x6f, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x76,
	0x6f, 0x6b, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x63, 0x65,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x50, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x6f, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_node_service_proto_rawDescOnce sync.Once
	file_node_service_proto_rawDescData = file_node_service_proto_rawDesc
)

func file_node_service_proto_rawDescGZIP() []byte {
	file_node_service_proto_rawDescOnce.Do(func() {
		file_node_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_node_service_proto_rawDescData)
	})
	return file_node_service_proto_rawDescData
}

var file_node_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_node_service_proto_goTypes = []interface{}{
	(*ReserveRequest)(nil),                   // 0: nodeservoceproto.ReserveRequest
	(*ReserveReply)(nil),                     // 1: nodeservoceproto.ReserveReply
	(*FunctionMeta)(nil),                     // 2: nodeservoceproto.FunctionMeta
	(*CreateContainerRequest)(nil),           // 3: nodeservoceproto.CreateContainerRequest
	(*CreateContainerReply)(nil),             // 4: nodeservoceproto.CreateContainerReply
	(*RemoveContainerRequest)(nil),           // 5: nodeservoceproto.RemoveContainerRequest
	(*RemoveContainerReply)(nil),             // 6: nodeservoceproto.RemoveContainerReply
	(*InvokeFunctionRequest)(nil),            // 7: nodeservoceproto.InvokeFunctionRequest
	(*InvokeFunctionReply)(nil),              // 8: nodeservoceproto.InvokeFunctionReply
	(*NodeStats)(nil),                        // 9: nodeservoceproto.NodeStats
	(*ContainerStats)(nil),                   // 10: nodeservoceproto.ContainerStats
	(*GetStatsRequest)(nil),                  // 11: nodeservoceproto.GetStatsRequest
	(*GetStatsReply)(nil),                    // 12: nodeservoceproto.GetStatsReply
	(*InvokeFunctionReply_Header)(nil),       // 13: nodeservoceproto.InvokeFunctionReply.Header
	(*InvokeFunctionReply_Footer)(nil),       // 14: nodeservoceproto.InvokeFunctionReply.Footer
	(*InvokeFunctionReply_Header_Value)(nil), // 15: nodeservoceproto.InvokeFunctionReply.Header.Value
	nil,                                      // 16: nodeservoceproto.InvokeFunctionReply.Header.HeadersEntry
}
var file_node_service_proto_depIdxs = []int32{
	2,  // 0: nodeservoceproto.CreateContainerRequest.function_meta:type_name -> nodeservoceproto.FunctionMeta
	2,  // 1: nodeservoceproto.InvokeFunctionRequest.function_meta:type_name -> nodeservoceproto.FunctionMeta
	13, // 2: nodeservoceproto.InvokeFunctionReply.header:type_name -> nodeservoceproto.InvokeFunctionReply.Header
	14, // 3: nodeservoceproto.InvokeFunctionReply.footer:type_name -> nodeservoceproto.InvokeFunctionReply.Footer
	9,  // 4: nodeservoceproto.GetStatsReply.node_stats:type_name -> nodeservoceproto.NodeStats
	10, // 5: nodeservoceproto.GetStatsReply.container_stats_list:type_name -> nodeservoceproto.ContainerStats
	16, // 6: nodeservoceproto.InvokeFunctionReply.Header.headers:type_name -> nodeservoceproto.InvokeFunctionReply.Header.HeadersEntry
	15, // 7: nodeservoceproto.InvokeFunctionReply.Header.HeadersEntry.value:type_name -> nodeservoceproto.InvokeFunctionReply.Header.Value
	0,  // 8: nodeservoceproto.NodeService.Reserve:input_type -> nodeservoceproto.ReserveRequest
	3,  // 9: nodeservoceproto.NodeService.CreateContainer:input_type -> nodeservoceproto.CreateContainerRequest
	5,  // 10: nodeservoceproto.NodeService.RemoveContainer:input_type -> nodeservoceproto.RemoveContainerRequest
	7,  // 11: nodeservoceproto.NodeService.InvokeFunction:input_type -> nodeservoceproto.InvokeFunctionRequest
	11, // 12: nodeservoceproto.NodeService.GetStats:input_type -> nodeservoceproto.GetStatsRequest
	1,  // 13: nodeservoceproto.NodeService.Reserve:output_type -> nodeservoceproto.ReserveReply
	4,  // 14: nodeservoceproto.NodeService.CreateContainer:output_type -> nodeservoceproto.CreateContainerReply
	6,  // 15: nodeservoceproto.NodeService.RemoveContainer:output_type -> nodeservoceproto.RemoveContainerReply
	8,  // 16: nodeservoceproto.NodeService.InvokeFunction:output_type -> nodeservoceproto.InvokeFunctionReply
	12, // 17: nodeservoceproto.NodeService.GetStats:output_type -> nodeservoceproto.GetStatsReply
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_node_service_proto_init() }
func file_node_service_proto_init() {
	if File_node_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_node_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContainerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveContainerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeFunctionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeFunctionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeFunctionReply_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeFunctionReply_Footer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_node_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeFunctionReply_Header_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_node_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_node_service_proto_goTypes,
		DependencyIndexes: file_node_service_proto_depIdxs,
		MessageInfos:      file_node_service_proto_msgTypes,
	}.Build()
	File_node_service_proto = out.File
	file_node_service_proto_rawDesc = nil
	file_node_service_proto_goTypes = nil
	file_node_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NodeServiceClient is the client API for NodeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeServiceClient interface {
	Reserve(ctx context.Context, in *ReserveRequest, opts ...grpc.CallOption) (*ReserveReply, error)
	CreateContainer(ctx context.Context, in *CreateContainerRequest, opts ...grpc.CallOption) (*CreateContainerReply, error)
	RemoveContainer(ctx context.Context, in *RemoveContainerRequest, opts ...grpc.CallOption) (*RemoveContainerReply, error)
	InvokeFunction(ctx context.Context, in *InvokeFunctionRequest, opts ...grpc.CallOption) (NodeService_InvokeFunctionClient, error)
	GetStats(ctx context.Context, in *GetStatsRequest, opts ...grpc.CallOption) (*GetStatsReply, error)
}

type nodeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNodeServiceClient(cc grpc.ClientConnInterface) NodeServiceClient {
	return &nodeServiceClient{cc}
}

func (c *nodeServiceClient) Reserve(ctx context.Context, in *ReserveRequest, opts ...grpc.CallOption) (*ReserveReply, error) {
	out := new(ReserveReply)
	err := c.cc.Invoke(ctx, "/nodeservoceproto.NodeService/Reserve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) CreateContainer(ctx context.Context, in *CreateContainerRequest, opts ...grpc.CallOption) (*CreateContainerReply, error) {
	out := new(CreateContainerReply)
	err := c.cc.Invoke(ctx, "/nodeservoceproto.NodeService/CreateContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) RemoveContainer(ctx context.Context, in *RemoveContainerRequest, opts ...grpc.CallOption) (*RemoveContainerReply, error) {
	out := new(RemoveContainerReply)
	err := c.cc.Invoke(ctx, "/nodeservoceproto.NodeService/RemoveContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) InvokeFunction(ctx context.Context, in *InvokeFunctionRequest, opts ...grpc.CallOption) (NodeService_InvokeFunctionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeService_serviceDesc.Streams[0], "/nodeservoceproto.NodeService/InvokeFunction", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeServiceInvokeFunctionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeService_InvokeFunctionClient interface {
	Recv() (*InvokeFunctionReply, error)
	grpc.ClientStream
}

type nodeServiceInvokeFunctionClient struct {
	grpc.ClientStream
}

func (x *nodeServiceInvokeFunctionClient) Recv() (*InvokeFunctionReply, error) {
	m := new(InvokeFunctionReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeServiceClient) GetStats(ctx context.Context, in *GetStatsRequest, opts ...grpc.CallOption) (*GetStatsReply, error) {
	out := new(GetStatsReply)
	err := c.cc.Invoke(ctx, "/nodeservoceproto.NodeService/GetStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeServiceServer is the server API for NodeService service.
type NodeServiceServer interface {
	Reserve(context.Context, *ReserveRequest) (*ReserveReply, error)
	CreateContainer(context.Context, *CreateContainerRequest) (*CreateContainerReply, error)
	RemoveContainer(context.Context, *RemoveContainerRequest) (*RemoveContainerReply, error)
	InvokeFunction(*InvokeFunctionRequest, NodeService_InvokeFunctionServer) error
	GetStats(context.Context, *GetStatsRequest) (*GetStatsReply, error)
}

// UnimplementedNodeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNodeServiceServer struct {
}

func (*UnimplementedNodeServiceServer) Reserve(context.Context, *ReserveRequest) (*ReserveReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reserve not implemented")
}
func (*UnimplementedNodeServiceServer) CreateContainer(context.Context, *CreateContainerRequest) (*CreateContainerReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateContainer not implemented")
}
func (*UnimplementedNodeServiceServer) RemoveContainer(context.Context, *RemoveContainerRequest) (*RemoveContainerReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveContainer not implemented")
}
func (*UnimplementedNodeServiceServer) InvokeFunction(*InvokeFunctionRequest, NodeService_InvokeFunctionServer) error {
	return status.Errorf(codes.Unimplemented, "method InvokeFunction not implemented")
}
func (*UnimplementedNodeServiceServer) GetStats(context.Context, *GetStatsRequest) (*GetStatsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStats not implemented")
}

func RegisterNodeServiceServer(s *grpc.Server, srv NodeServiceServer) {
	s.RegisterService(&_NodeService_serviceDesc, srv)
}

func _NodeService_Reserve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReserveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).Reserve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservoceproto.NodeService/Reserve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).Reserve(ctx, req.(*ReserveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_CreateContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).CreateContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservoceproto.NodeService/CreateContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).CreateContainer(ctx, req.(*CreateContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_RemoveContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).RemoveContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservoceproto.NodeService/RemoveContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).RemoveContainer(ctx, req.(*RemoveContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_InvokeFunction_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(InvokeFunctionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeServiceServer).InvokeFunction(m, &nodeServiceInvokeFunctionServer{stream})
}

type NodeService_InvokeFunctionServer interface {
	Send(*InvokeFunctionReply) error
	grpc.ServerStream
}

type nodeServiceInvokeFunctionServer struct {
	grpc.ServerStream
}

func (x *nodeServiceInvokeFunctionServer) Send(m *InvokeFunctionReply) error {
	return x.ServerStream.SendMsg(m)
}

func _NodeService_GetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).GetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservoceproto.NodeService/GetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).GetStats(ctx, req.(*GetStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nodeservoceproto.NodeService",
	HandlerType: (*NodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Reserve",
			Handler:    _NodeService_Reserve_Handler,
		},
		{
			MethodName: "CreateContainer",
			Handler:    _NodeService_CreateContainer_Handler,
		},
		{
			MethodName: "RemoveContainer",
			Handler:    _NodeService_RemoveContainer_Handler,
		},
		{
			MethodName: "GetStats",
			Handler:    _NodeService_GetStats_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "InvokeFunction",
			Handler:       _NodeService_InvokeFunction_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "node_service.proto",
}
